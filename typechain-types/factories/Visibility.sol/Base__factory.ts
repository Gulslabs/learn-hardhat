/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { Base, BaseInterface } from "../../Visibility.sol/Base";

const _abi = [
  {
    inputs: [],
    name: "externalFunction",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "publicFunc",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506101d9806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80633a32b5491461003b5780634b73383f14610059575b600080fd5b610043610077565b6040516100509190610181565b60405180910390f35b6100616100b4565b60405161006e9190610181565b60405180910390f35b60606040518060400160405280601081526020017f507269766174652046756e6374696f6e00000000000000000000000000000000815250905090565b60606040518060400160405280600f81526020017f5075626c69632046756e6374696f6e0000000000000000000000000000000000815250905090565b600081519050919050565b600082825260208201905092915050565b60005b8381101561012b578082015181840152602081019050610110565b60008484015250505050565b6000601f19601f8301169050919050565b6000610153826100f1565b61015d81856100fc565b935061016d81856020860161010d565b61017681610137565b840191505092915050565b6000602082019050818103600083015261019b8184610148565b90509291505056fea2646970667358221220133366660aeebc1c9aecbf02127090a248d5941564683e837ff1764a44075b8064736f6c63430008110033";

type BaseConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BaseConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Base__factory extends ContractFactory {
  constructor(...args: BaseConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Base> {
    return super.deploy(overrides || {}) as Promise<Base>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Base {
    return super.attach(address) as Base;
  }
  override connect(signer: Signer): Base__factory {
    return super.connect(signer) as Base__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BaseInterface {
    return new utils.Interface(_abi) as BaseInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Base {
    return new Contract(address, _abi, signerOrProvider) as Base;
  }
}
