/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { Merkle, MerkleInterface } from "../../MerkeProof.sol/Merkle";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "getRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50600060405180608001604052806040518060400160405280600a81526020017f4d65202d2d3e20596f750000000000000000000000000000000000000000000081525081526020016040518060400160405280600f81526020017f4d61726b202d2d3e20416e64726577000000000000000000000000000000000081525081526020016040518060400160405280600d81526020017f426f62202d2d3e2044617669730000000000000000000000000000000000000081525081526020016040518060400160405280600d81526020017f546f6d202d2d3e204a6572727900000000000000000000000000000000000000815250815250905060005b60048160ff161015610195576000828260ff1660048110610131576101306102b5565b5b60200201516040516020016101469190610355565b604051602081830303815290604052805190602001209080600181540180825580915050600190039060005260206000200160009091909190915055808061018d906103a8565b91505061010d565b5060006004905060005b60008211156102ad5760005b6001836101b891906103db565b8160ff16101561028a576000808260ff16846101d4919061040f565b815481106101e5576101e46102b5565b5b9060005260206000200154600060018460ff1686610203919061040f565b61020d919061040f565b8154811061021e5761021d6102b5565b5b906000526020600020015460405160200161023a92919061046e565b604051602081830303815290604052805190602001209080600181540180825580915050600190039060005260206000200160009091909190915055600281610283919061049a565b90506101ab565b508181610297919061040f565b90506002826102a691906104fe565b915061019f565b50505061052f565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600081519050919050565b600081905092915050565b60005b838110156103185780820151818401526020810190506102fd565b60008484015250505050565b600061032f826102e4565b61033981856102ef565b93506103498185602086016102fa565b80840191505092915050565b60006103618284610324565b915081905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600060ff82169050919050565b60006103b38261039b565b915060ff82036103c6576103c561036c565b5b600182019050919050565b6000819050919050565b60006103e6826103d1565b91506103f1836103d1565b92508282039050818111156104095761040861036c565b5b92915050565b600061041a826103d1565b9150610425836103d1565b925082820190508082111561043d5761043c61036c565b5b92915050565b6000819050919050565b6000819050919050565b61046861046382610443565b61044d565b82525050565b600061047a8285610457565b60208201915061048a8284610457565b6020820191508190509392505050565b60006104a58261039b565b91506104b08361039b565b9250828201905060ff8111156104c9576104c861036c565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610509826103d1565b9150610514836103d1565b925082610524576105236104cf565b5b828204905092915050565b61018a8061053e6000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c80635ca1e16514610030575b600080fd5b61003861004e565b604051610045919061009d565b60405180910390f35b600080600160008054905061006391906100f1565b8154811061007457610073610125565b5b9060005260206000200154905090565b6000819050919050565b61009781610084565b82525050565b60006020820190506100b2600083018461008e565b92915050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006100fc826100b8565b9150610107836100b8565b925082820390508181111561011f5761011e6100c2565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fdfea264697066735822122022ade55a52ed6003ca355cbb6b43042a155df5ca102bb5cff678d274f4c9673764736f6c63430008110033";

type MerkleConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MerkleConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Merkle__factory extends ContractFactory {
  constructor(...args: MerkleConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Merkle> {
    return super.deploy(overrides || {}) as Promise<Merkle>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Merkle {
    return super.attach(address) as Merkle;
  }
  override connect(signer: Signer): Merkle__factory {
    return super.connect(signer) as Merkle__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MerkleInterface {
    return new utils.Interface(_abi) as MerkleInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Merkle {
    return new Contract(address, _abi, signerOrProvider) as Merkle;
  }
}
