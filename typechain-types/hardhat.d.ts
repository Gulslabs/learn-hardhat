/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { ethers } from "ethers";
import {
  FactoryOptions,
  HardhatEthersHelpers as HardhatEthersHelpersBase,
} from "@nomiclabs/hardhat-ethers/types";

import * as Contracts from ".";

declare module "hardhat/types/runtime" {
  interface HardhatEthersHelpers extends HardhatEthersHelpersBase {
    getContractFactory(
      name: "Adoption",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Adoption__factory>;
    getContractFactory(
      name: "Ballot",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Ballot__factory>;
    getContractFactory(
      name: "Caller",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Caller__factory>;
    getContractFactory(
      name: "Receiver",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Receiver__factory>;
    getContractFactory(
      name: "Car",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Car__factory>;
    getContractFactory(
      name: "CarFactory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.CarFactory__factory>;
    getContractFactory(
      name: "Fallback",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Fallback__factory>;
    getContractFactory(
      name: "Gas",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Gas__factory>;
    getContractFactory(
      name: "Gas",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Gas__factory>;
    getContractFactory(
      name: "LocationTracker",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.LocationTracker__factory>;
    getContractFactory(
      name: "Merkle",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Merkle__factory>;
    getContractFactory(
      name: "MerkleProof",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MerkleProof__factory>;
    getContractFactory(
      name: "Migrations",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Migrations__factory>;
    getContractFactory(
      name: "Payable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Payable__factory>;
    getContractFactory(
      name: "Base",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Base__factory>;

    getContractAt(
      name: "Adoption",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Adoption>;
    getContractAt(
      name: "Ballot",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Ballot>;
    getContractAt(
      name: "Caller",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Caller>;
    getContractAt(
      name: "Receiver",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Receiver>;
    getContractAt(
      name: "Car",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Car>;
    getContractAt(
      name: "CarFactory",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.CarFactory>;
    getContractAt(
      name: "Fallback",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Fallback>;
    getContractAt(
      name: "Gas",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Gas>;
    getContractAt(
      name: "Gas",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Gas>;
    getContractAt(
      name: "LocationTracker",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.LocationTracker>;
    getContractAt(
      name: "Merkle",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Merkle>;
    getContractAt(
      name: "MerkleProof",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.MerkleProof>;
    getContractAt(
      name: "Migrations",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Migrations>;
    getContractAt(
      name: "Payable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Payable>;
    getContractAt(
      name: "Base",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Base>;

    // default types
    getContractFactory(
      name: string,
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<ethers.ContractFactory>;
    getContractFactory(
      abi: any[],
      bytecode: ethers.utils.BytesLike,
      signer?: ethers.Signer
    ): Promise<ethers.ContractFactory>;
    getContractAt(
      nameOrAbi: string | any[],
      address: string,
      signer?: ethers.Signer
    ): Promise<ethers.Contract>;
  }
}
